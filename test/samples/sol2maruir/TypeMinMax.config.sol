pragma solidity 0.6.10;

contract Test {
    function signedIntTypes() public {
        assert(type(int8).min == (-128));
        assert(type(int8).max == 127);
        assert(type(int16).min == (-32768));
        assert(type(int16).max == 32767);
        assert(type(int24).min == (-8388608));
        assert(type(int24).max == 8388607);
        assert(type(int32).min == (-2147483648));
        assert(type(int32).max == 2147483647);
        assert(type(int40).min == (-549755813888));
        assert(type(int40).max == 549755813887);
        assert(type(int48).min == (-140737488355328));
        assert(type(int48).max == 140737488355327);
        assert(type(int56).min == (-36028797018963968));
        assert(type(int56).max == 36028797018963967);
        assert(type(int64).min == (-9223372036854775808));
        assert(type(int64).max == 9223372036854775807);
        assert(type(int72).min == (-2361183241434822606848));
        assert(type(int72).max == 2361183241434822606847);
        assert(type(int80).min == (-604462909807314587353088));
        assert(type(int80).max == 604462909807314587353087);
        assert(type(int88).min == (-154742504910672534362390528));
        assert(type(int88).max == 154742504910672534362390527);
        assert(type(int96).min == (-39614081257132168796771975168));
        assert(type(int96).max == 39614081257132168796771975167);
        assert(type(int104).min == (-10141204801825835211973625643008));
        assert(type(int104).max == 10141204801825835211973625643007);
        assert(type(int112).min == (-2596148429267413814265248164610048));
        assert(type(int112).max == 2596148429267413814265248164610047);
        assert(type(int120).min == (-664613997892457936451903530140172288));
        assert(type(int120).max == 664613997892457936451903530140172287);
        assert(type(int128).min == (-170141183460469231731687303715884105728));
        assert(type(int128).max == 170141183460469231731687303715884105727);
        assert(type(int136).min == (-43556142965880123323311949751266331066368));
        assert(type(int136).max == 43556142965880123323311949751266331066367);
        assert(type(int144).min == (-11150372599265311570767859136324180752990208));
        assert(type(int144).max == 11150372599265311570767859136324180752990207);
        assert(type(int152).min == (-2854495385411919762116571938898990272765493248));
        assert(type(int152).max == 2854495385411919762116571938898990272765493247);
        assert(type(int160).min == (-730750818665451459101842416358141509827966271488));
        assert(type(int160).max == 730750818665451459101842416358141509827966271487);
        assert(type(int168).min == (-187072209578355573530071658587684226515959365500928));
        assert(type(int168).max == 187072209578355573530071658587684226515959365500927);
        assert(type(int176).min == (-47890485652059026823698344598447161988085597568237568));
        assert(type(int176).max == 47890485652059026823698344598447161988085597568237567);
        assert(type(int184).min == (-12259964326927110866866776217202473468949912977468817408));
        assert(type(int184).max == 12259964326927110866866776217202473468949912977468817407);
        assert(type(int192).min == (-3138550867693340381917894711603833208051177722232017256448));
        assert(type(int192).max == 3138550867693340381917894711603833208051177722232017256447);
        assert(type(int200).min == (-803469022129495137770981046170581301261101496891396417650688));
        assert(type(int200).max == 803469022129495137770981046170581301261101496891396417650687);
        assert(type(int208).min == (-205688069665150755269371147819668813122841983204197482918576128));
        assert(type(int208).max == 205688069665150755269371147819668813122841983204197482918576127);
        assert(type(int216).min == (-52656145834278593348959013841835216159447547700274555627155488768));
        assert(type(int216).max == 52656145834278593348959013841835216159447547700274555627155488767);
        assert(type(int224).min == (-13479973333575319897333507543509815336818572211270286240551805124608));
        assert(type(int224).max == 13479973333575319897333507543509815336818572211270286240551805124607);
        assert(type(int232).min == (-3450873173395281893717377931138512726225554486085193277581262111899648));
        assert(type(int232).max == 3450873173395281893717377931138512726225554486085193277581262111899647);
        assert(type(int240).min == (-883423532389192164791648750371459257913741948437809479060803100646309888));
        assert(type(int240).max == 883423532389192164791648750371459257913741948437809479060803100646309887);
        assert(type(int248).min == (-226156424291633194186662080095093570025917938800079226639565593765455331328));
        assert(type(int248).max == 226156424291633194186662080095093570025917938800079226639565593765455331327);
        assert(type(int256).min == (-57896044618658097711785492504343953926634992332820282019728792003956564819968));
        assert(type(int256).max == 57896044618658097711785492504343953926634992332820282019728792003956564819967);
        assert(type(int).min == (-57896044618658097711785492504343953926634992332820282019728792003956564819968));
        assert(type(int).max == 57896044618658097711785492504343953926634992332820282019728792003956564819967);
        int8 a = type(int8).min;
        int8 b = type(int8).max;
        assert(a == (-128));
        assert(b == 127);
    }

    function unsignedIntTypes() public {
        assert(type(uint8).min == 0);
        assert(type(uint8).max == 255);
        assert(type(uint16).min == 0);
        assert(type(uint16).max == 65535);
        assert(type(uint24).min == 0);
        assert(type(uint24).max == 16777215);
        assert(type(uint32).min == 0);
        assert(type(uint32).max == 4294967295);
        assert(type(uint40).min == 0);
        assert(type(uint40).max == 1099511627775);
        assert(type(uint48).min == 0);
        assert(type(uint48).max == 281474976710655);
        assert(type(uint56).min == 0);
        assert(type(uint56).max == 72057594037927935);
        assert(type(uint64).min == 0);
        assert(type(uint64).max == 18446744073709551615);
        assert(type(uint72).min == 0);
        assert(type(uint72).max == 4722366482869645213695);
        assert(type(uint80).min == 0);
        assert(type(uint80).max == 1208925819614629174706175);
        assert(type(uint88).min == 0);
        assert(type(uint88).max == 309485009821345068724781055);
        assert(type(uint96).min == 0);
        assert(type(uint96).max == 79228162514264337593543950335);
        assert(type(uint104).min == 0);
        assert(type(uint104).max == 20282409603651670423947251286015);
        assert(type(uint112).min == 0);
        assert(type(uint112).max == 5192296858534827628530496329220095);
        assert(type(uint120).min == 0);
        assert(type(uint120).max == 1329227995784915872903807060280344575);
        assert(type(uint128).min == 0);
        assert(type(uint128).max == 340282366920938463463374607431768211455);
        assert(type(uint136).min == 0);
        assert(type(uint136).max == 87112285931760246646623899502532662132735);
        assert(type(uint144).min == 0);
        assert(type(uint144).max == 22300745198530623141535718272648361505980415);
        assert(type(uint152).min == 0);
        assert(type(uint152).max == 5708990770823839524233143877797980545530986495);
        assert(type(uint160).min == 0);
        assert(type(uint160).max == 1461501637330902918203684832716283019655932542975);
        assert(type(uint168).min == 0);
        assert(type(uint168).max == 374144419156711147060143317175368453031918731001855);
        assert(type(uint176).min == 0);
        assert(type(uint176).max == 95780971304118053647396689196894323976171195136475135);
        assert(type(uint184).min == 0);
        assert(type(uint184).max == 24519928653854221733733552434404946937899825954937634815);
        assert(type(uint192).min == 0);
        assert(type(uint192).max == 6277101735386680763835789423207666416102355444464034512895);
        assert(type(uint200).min == 0);
        assert(type(uint200).max == 1606938044258990275541962092341162602522202993782792835301375);
        assert(type(uint208).min == 0);
        assert(type(uint208).max == 411376139330301510538742295639337626245683966408394965837152255);
        assert(type(uint216).min == 0);
        assert(type(uint216).max == 105312291668557186697918027683670432318895095400549111254310977535);
        assert(type(uint224).min == 0);
        assert(type(uint224).max == 26959946667150639794667015087019630673637144422540572481103610249215);
        assert(type(uint232).min == 0);
        assert(type(uint232).max == 6901746346790563787434755862277025452451108972170386555162524223799295);
        assert(type(uint240).min == 0);
        assert(type(uint240).max == 1766847064778384329583297500742918515827483896875618958121606201292619775);
        assert(type(uint248).min == 0);
        assert(type(uint248).max == 452312848583266388373324160190187140051835877600158453279131187530910662655);
        assert(type(uint256).min == 0);
        assert(type(uint256).max == 115792089237316195423570985008687907853269984665640564039457584007913129639935);
        assert(type(uint).min == 0);
        assert(type(uint).max == 115792089237316195423570985008687907853269984665640564039457584007913129639935);
        uint8 a = type(uint8).min;
        uint8 b = type(uint8).max;
        assert(a == 0);
        assert(b == 255);
    }

    function verify() public {
        signedIntTypes();
        unsignedIntTypes();
    }
}

contract __IRTest__ {
    function main() public {
        Test __this__ = new Test();
        __testCase1444__(__this__);
    }

    function __testCase1444__(Test __this__) internal {
        __this__.verify();
    }
}
